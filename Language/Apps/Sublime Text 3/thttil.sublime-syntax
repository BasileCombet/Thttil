# MIT License

# Copyright (c) 2019 Basile Combet

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Thttil
file_extensions:
  - thtt
  - thttil
  - t
scope: source.thttil
contexts:
  main:
    - include: capture_groups
    - include: strings
    - include: global_tokens
  capture_groups:
    - match: \$\(
      captures:
        0: punctuation.definition.token.begin.thttil
      push:
        - match: \)
          captures:
            0: punctuation.definition.token.end.thttil
          pop: true
        - include: tokens
        - include: strings
  global_tokens:
    - match: "%"
      push:
        - meta_scope: markup.quote.thttil
        - match: "%"
          pop: true
        - match: \\.
          scope: constant.character.escape.thttil
    - match: (#.*)
      scope: comment.line.number-sign.thttil
  strings:
    - match: '"'
      push:
        - meta_scope: string.quoted.double.thttil
        - match: '"'
          pop: true
        - match: \\.
          scope: constant.character.escape.thttil
  tokens:
    - match: '([A-Z]+)\s+'
      scope: entity.name.function.thttil
    - match: '\$([\w\d\._-]+)'
      scope: variable.parameter.thttil
