%YAML 1.2

# MIT License

# Copyright (c) 2019 Basile Combet

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

---
name: Thttil
fileTypes:
    - thtt
    - thttil
    - t
scopeName: source.thttil
foldingStartMarker: '\{\s*$'
foldingStopMarker: '^\s*\}'
contexts:
    main:
        - include: capture_groups
        - include: global_tokens
    capture_groups:
        begin: \$\(
        end: \)
        beginCaptures:
            '0':
                name: punctuation.definition.token.begin.thttil
        endCaptures:
            '0':
                name: punctuation.definition.token.end.thttil
        patterns:
            - include: command_tokens
    global_tokens:
        patterns:
            -   name: markup.quote.thttil
                begin: '%'
                end: '%'
                patterns:
                    - {name: string.jade.thttil, match: \\.}
            -   name: comment.line.number-sign.thttil
                match: '(#.*)'
            -   name: entity.name.tag.thttil
                match: '(@[\w]+)'
    command_tokens:
        patterns:
            -   match: '([A-Z]+)'
                name: entity.name.function.thttil
            -   name: variable.parameter.thttil
                match: '\$([\w\d\._-]+)'
            -   name: string.quoted.double.thttil
                begin: '"'
                end: '"'
                patterns:
                    - {name: constant.character.escape.thttil, match: \\.}